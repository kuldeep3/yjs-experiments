{"ast":null,"code":"/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\nimport * as math from './math.js';\nimport * as binary from './binary.js';\nimport { cryptoRandomBuffer } from './isomorphic.js';\nexport const rand = Math.random;\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0];\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8));\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0);\n};\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\n\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]; // @ts-ignore\n\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g,\n/** @param {number} c */\nc => (c ^ uint32() & 15 >> c / 4).toString(16));","map":{"version":3,"names":["math","binary","cryptoRandomBuffer","rand","Math","random","uint32","Uint32Array","uint53","arr","BITS21","BITS32","oneOf","floor","length","uuidv4Template","uuidv4","replace","c","toString"],"sources":["/Users/kuldeepupreti/Downloads/Projects/personal/yjs/node_modules/lib0/random.js"],"sourcesContent":["\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAlB;AAEP,OAAO,MAAMC,MAAM,GAAG,MAAM,IAAIC,WAAJ,CAAgBL,kBAAkB,CAAC,CAAD,CAAlC,EAAuC,CAAvC,CAArB;AAEP,OAAO,MAAMM,MAAM,GAAG,MAAM;EAC1B,MAAMC,GAAG,GAAG,IAAIF,WAAJ,CAAgBL,kBAAkB,CAAC,CAAD,CAAlC,CAAZ;EACA,OAAO,CAACO,GAAG,CAAC,CAAD,CAAH,GAASR,MAAM,CAACS,MAAjB,KAA4BT,MAAM,CAACU,MAAP,GAAgB,CAA5C,KAAkDF,GAAG,CAAC,CAAD,CAAH,KAAW,CAA7D,CAAP;AACD,CAHM;AAKP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,KAAK,GAAGH,GAAG,IAAIA,GAAG,CAACT,IAAI,CAACa,KAAL,CAAWV,IAAI,KAAKM,GAAG,CAACK,MAAxB,CAAD,CAAxB,C,CAEP;;AACA,MAAMC,cAAc,GAAG,CAAC,GAAD,IAAQ,CAAC,GAAT,GAAe,CAAC,GAAhB,GAAsB,CAAC,GAAvB,GAA6B,CAAC,IAArD;AACA,OAAO,MAAMC,MAAM,GAAG,MAAMD,cAAc,CAACE,OAAf,CAAuB,QAAvB;AAAiC;AAAyBC,CAAC,IACrF,CAACA,CAAC,GAAGZ,MAAM,KAAK,MAAMY,CAAC,GAAG,CAA1B,EAA6BC,QAA7B,CAAsC,EAAtC,CAD0B,CAArB"},"metadata":{},"sourceType":"module"}