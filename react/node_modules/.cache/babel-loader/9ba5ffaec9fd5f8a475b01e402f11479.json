{"ast":null,"code":"/**\n * Observable class prototype.\n *\n * @module observable\n */\nimport * as map from './map.js';\nimport * as set from './set.js';\nimport * as array from './array.js';\n/**\n * Handles named events.\n *\n * @template N\n */\n\nexport class Observable {\n  constructor() {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create();\n  }\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n\n\n  on(name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f);\n  }\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n\n\n  once(name, f) {\n    var _this = this;\n\n    /**\n     * @param  {...any} args\n     */\n    const _f = function () {\n      _this.off(name, _f);\n\n      f(...arguments);\n    };\n\n    this.on(name, _f);\n  }\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n\n\n  off(name, f) {\n    const observers = this._observers.get(name);\n\n    if (observers !== undefined) {\n      observers.delete(f);\n\n      if (observers.size === 0) {\n        this._observers.delete(name);\n      }\n    }\n  }\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n\n\n  emit(name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args));\n  }\n\n  destroy() {\n    this._observers = map.create();\n  }\n\n}","map":{"version":3,"names":["map","set","array","Observable","constructor","_observers","create","on","name","f","setIfUndefined","add","once","_f","off","observers","get","undefined","delete","size","emit","args","from","values","forEach","destroy"],"sources":["/Users/kuldeepupreti/Downloads/Projects/personal/yjs/node_modules/lib0/observable.js"],"sourcesContent":["/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,GAAZ,MAAqB,UAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,CAAiB;EACtBC,WAAW,GAAI;IACb;AACJ;AACA;AACA;IACI,KAAKC,UAAL,GAAkBL,GAAG,CAACM,MAAJ,EAAlB;EACD;EAED;AACF;AACA;AACA;;;EACEC,EAAE,CAAEC,IAAF,EAAQC,CAAR,EAAW;IACXT,GAAG,CAACU,cAAJ,CAAmB,KAAKL,UAAxB,EAAoCG,IAApC,EAA0CP,GAAG,CAACK,MAA9C,EAAsDK,GAAtD,CAA0DF,CAA1D;EACD;EAED;AACF;AACA;AACA;;;EACEG,IAAI,CAAEJ,IAAF,EAAQC,CAAR,EAAW;IAAA;;IACb;AACJ;AACA;IACI,MAAMI,EAAE,GAAG,YAAa;MACtB,KAAI,CAACC,GAAL,CAASN,IAAT,EAAeK,EAAf;;MACAJ,CAAC,CAAC,YAAD,CAAD;IACD,CAHD;;IAIA,KAAKF,EAAL,CAAQC,IAAR,EAAcK,EAAd;EACD;EAED;AACF;AACA;AACA;;;EACEC,GAAG,CAAEN,IAAF,EAAQC,CAAR,EAAW;IACZ,MAAMM,SAAS,GAAG,KAAKV,UAAL,CAAgBW,GAAhB,CAAoBR,IAApB,CAAlB;;IACA,IAAIO,SAAS,KAAKE,SAAlB,EAA6B;MAC3BF,SAAS,CAACG,MAAV,CAAiBT,CAAjB;;MACA,IAAIM,SAAS,CAACI,IAAV,KAAmB,CAAvB,EAA0B;QACxB,KAAKd,UAAL,CAAgBa,MAAhB,CAAuBV,IAAvB;MACD;IACF;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEY,IAAI,CAAEZ,IAAF,EAAQa,IAAR,EAAc;IAChB;IACA,OAAOnB,KAAK,CAACoB,IAAN,CAAW,CAAC,KAAKjB,UAAL,CAAgBW,GAAhB,CAAoBR,IAApB,KAA6BR,GAAG,CAACM,MAAJ,EAA9B,EAA4CiB,MAA5C,EAAX,EAAiEC,OAAjE,CAAyEf,CAAC,IAAIA,CAAC,CAAC,GAAGY,IAAJ,CAA/E,CAAP;EACD;;EAEDI,OAAO,GAAI;IACT,KAAKpB,UAAL,GAAkBL,GAAG,CAACM,MAAJ,EAAlB;EACD;;AA9DqB"},"metadata":{},"sourceType":"module"}